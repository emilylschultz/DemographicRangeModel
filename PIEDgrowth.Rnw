\documentclass{article}

\title{PIED growth models}

\usepackage{float}

\begin{document}
\SweaveOpts{concordance=TRUE}

\maketitle

<<echo=FALSE>>=
library(ggeffects)
library(ggplot2)
library(coefplot)
library(cowplot)
library(effects)

# Read data
# start with the same data file that is used for analysis of survival/mortality
grdata <- read.csv("./Processed/Survival/SurvivalData.csv", header = T, stringsAsFactors = F)

# Only keep trees that didn't die
grdata <- subset(grdata, STATUSCD == 1) #18204

# Create increment columns
# note that growth increments need to be moved to the positive realm (by adding a constant)
# IF log transform is used
grdata$AGB_INCR <- grdata$DRYBIO_AG_DIFF / grdata$CENSUS_INTERVAL
grdata$DIA_INCR <- grdata$DIA_DIFF / grdata$CENSUS_INTERVAL
grdata$BA_INCR <- grdata$BA_DIFF / grdata$CENSUS_INTERVAL
@

\section{Overview}

\begin{enumerate}
\item{Select best response variable}
\item{Select best size predictor (diameter versus basal area)}
\end{enumerate}

To test between the climate-only approach typically used in climate envelope modeling and including competition, as motivated by DMB, we created two different models:

\begin{enumerate}
\item{Climate only (simple): using temp and ppt norms + quadratics}
\item{Climate + competition (simple): same as climate only, but with BALIVE (and quadratic) added}
\end{enumerate}

We then created two more complex models to test how increasing model complexity, which generally improves AIC at the vital rate level, changes our predicted distributions. 

\begin{enumerate}
\item Climate + competition (interactions): climate + competition, but includes 2-way interactions between linear predictors
\item Climate + competition (complex):
\begin{enumerate}
 \item Test between temperature and vpd
 \item Compare annual, 3-season, and 4-season
 \item Compare normals, census interval, anomalies, and anomalies + norms
 \item Add drought anomalies
 \begin{enumerate}
	\item total ppt and mean temp during drought
	\item 3-season ppt and mean temp during drought
	\item total ppt and temp anomalies during drought
	\item 3-season ppt and temp anomalies during drought
 \end{enumerate}  
 \item Add interactions (interactions without quadratics vs interactions + quadratics)
 \end{enumerate}
\end{enumerate}

\section{Histograms}
\begin{figure}[H]
<<fig=TRUE, echo=FALSE>>=
par(mfrow=c(2,2))
hist(grdata$PREVDIA)
hist(grdata$BALIVE)
hist(log(grdata$BALIVE)) 
@
\end{figure}

\begin{figure}[H]
<<fig=TRUE, echo=FALSE>>=
par(mfrow=c(2,2))
hist(grdata$PPT_yr) 
hist(log(grdata$PPT_yr))
hist(grdata$T_yr)
@
\end{figure}

\begin{figure}[H]
<<fig=TRUE,echo=FALSE>>=
par(mfrow=c(1,2))
hist(grdata$DIA_INCR)
hist(grdata$DIA_INCR, breaks = c(seq(-2.5, 1.75, by = 0.01)), xlim = c(-0.5, 0.5))
@
\end{figure}

\section{Models}
<<echo=FALSE>>=
library(dplyr)
grdata.scaled <- grdata %>% mutate_at(scale, .vars = vars(-CN, -PREV_TRE_CN, -PLT_CN, -PREV_PLT_CN, -CONDID,
                                                    -STATUSCD, -MEASYEAR, -PREV_MEASYEAR, 
                                                    -CENSUS_INTERVAL,
                                                    -AGB_INCR, -DIA_INCR, -BA_INCR))


library(lme4)
library(lmerTest)
library(MuMIn) # use MuMin to choose between models (AICc)
library(DHARMa) # use DHARMa to check residuals
@

\subsection{Compare different response variables (AGB, DIA, BA)}
<<echo=FALSE>>=
gmodel.AGB <- lmer(AGB_INCR ~ PREV_DRYBIO_AG + I(PREV_DRYBIO_AG^2) + BALIVE + PPT_c + PPT_wd + PPT_m + VPD_c + VPD_wd + VPD_m + (1|PLT_CN), data = grdata.scaled)
gmodel.DIA <- lmer(DIA_INCR ~ PREVDIA + I(PREVDIA^2) + BALIVE + PPT_c + PPT_wd + PPT_m + VPD_c + VPD_wd + VPD_m + (1|PLT_CN), data = grdata.scaled)
gmodel.BA <- lmer(BA_INCR ~ BAt1 + I(BAt1^2) + BALIVE + PPT_c + PPT_wd + PPT_m + VPD_c + VPD_wd + VPD_m + (1|PLT_CN), data = grdata.scaled)
mod.comp <- model.sel(gmodel.AGB, gmodel.DIA, gmodel.BA)
@

<<>>=
mod.comp
@

DIA\_INCR resulted in the best residuals, so we proceeded with that as our response variable.

\subsection{Compare different size predictors}
<<echo=FALSE>>=
gmodel.1a <- lmer(DIA_INCR ~ BAt1 + I(BAt1^2) + (1|PLT_CN), data = grdata.scaled)
gmodel.1b <- lmer(DIA_INCR ~ PREVDIA + I(PREVDIA^2) + (1|PLT_CN), data = grdata.scaled)
gmodel.1c <- lmer(DIA_INCR ~ PREV_DRYBIO_AG + I(PREV_DRYBIO_AG^2) + (1|PLT_CN), data = grdata.scaled)
@

The residuals looked good for PREVDIA, so we proceeded with that.

\subsection{Show the effect of adding quadratics}
<<echo=FALSE>>=
gmodel.lin <- lmer(DIA_INCR ~ PREVDIA + BALIVE + PPT_yr_norm + T_yr_norm + 
                    (1|PLT_CN), data = grdata.scaled)
gmodel.q <- lmer(DIA_INCR ~ PREVDIA + BALIVE + PPT_yr_norm + T_yr_norm + 
                   I(PREVDIA^2) + I(BALIVE^2) + I(PPT_yr_norm^2) + I(T_yr_norm^2) + 
                     (1|PLT_CN), data = grdata.scaled)
mod.comp0<-model.sel(gmodel.lin,gmodel.q)
@

<<>>=
mod.comp0
@

There was a strong preference for including quadratics, which is why we decided quadratics should be included in the ``simple" climate models.

\subsection{Compare temperature and VPD}
<<echo=FALSE>>=
gmodel.1a <- lmer(DIA_INCR ~ PREVDIA + BALIVE + PPT_yr + VPD_yr + I(PREVDIA^2) + I(BALIVE^2) + 
                    I(PPT_yr^2) + I(VPD_yr^2) + 
                    (1|PLT_CN), data = grdata.scaled)
gmodel.1b <- lmer(DIA_INCR ~ PREVDIA + BALIVE + PPT_yr + T_yr + I(PREVDIA^2) + I(BALIVE^2) + 
                    I(PPT_yr^2) + I(T_yr^2) + 
                    (1|PLT_CN), data = grdata.scaled)
mod.comp1 <- model.sel(gmodel.1a, gmodel.1b)
@

<<>>=
mod.comp1
@

There was a preference for temperature.

\subsection{Compare annual, 3-season, and 4-season}
<<echo=FALSE>>=
gmodel.2a <- lmer(DIA_INCR ~ PREVDIA + BALIVE + PPT_c + PPT_wd + PPT_m + T_c + T_wd + T_m + 
                  I(PREVDIA^2) + I(BALIVE^2) + I(PPT_c^2) + I(PPT_wd^2) + I(PPT_m^2) + 
                  I(T_c^2) + I(T_wd^2) + (T_m^2) + 
                  (1|PLT_CN), data = grdata.scaled)
gmodel.2b <- lmer(DIA_INCR ~ PREVDIA + BALIVE + PPT_c + + PPT_pf + PPT_fs + PPT_m + T_c + T_pf + T_fs + T_m + 
                    I(PREVDIA^2) + I(BALIVE^2) + I(PPT_c^2) + I(PPT_pf^2) + I(PPT_fs^2) + I(PPT_m^2) + 
                    I(T_c^2) + I(T_pf^2) + I(T_fs^2) + (T_m^2) + 
                    (1|PLT_CN), data = grdata.scaled)
mod.comp2 <- model.sel(gmodel.1b, gmodel.2a, gmodel.2b)
@

<<>>=
mod.comp2
@

The best model used annual climate predictors.

\subsection{Compare normals vs census intervals vs anomalies}
<<echo=FALSE>>=
gmodel.3a <- lmer(DIA_INCR ~ PREVDIA + BALIVE + PPT_yr_norm + T_yr_norm + I(PREVDIA^2) + I(BALIVE^2) + 
                    I(PPT_yr_norm^2) + I(T_yr_norm^2) + 
                    (1|PLT_CN), data = grdata.scaled)
gmodel.3b <- lmer(DIA_INCR ~ PREVDIA + BALIVE + PPT_c_norm + PPT_wd_norm + PPT_m_norm + 
                    T_c_norm + T_wd_norm + T_m_norm + I(PREVDIA^2) + I(BALIVE^2) + 
                    I(PPT_c_norm^2) + I(PPT_wd_norm^2) + I(PPT_m_norm^2) + 
                    I(T_c_norm^2) + I(T_wd_norm^2) + (T_m_norm^2) + 
                    (1|PLT_CN), data = grdata.scaled)
gmodel.3c <- lmer(DIA_INCR ~ PREVDIA + BALIVE + PPT_yr_anom + T_yr_anom + I(PREVDIA^2) + I(BALIVE^2) + 
                    I(PPT_yr_anom^2) + I(T_yr_anom^2) + 
                    (1|PLT_CN), data = grdata.scaled)
gmodel.3d <- lmer(DIA_INCR ~ PREVDIA + BALIVE + PPT_c_anom + PPT_wd_anom + PPT_m_anom + 
                    T_c_anom + T_wd_anom + T_m_anom + I(PREVDIA^2) + I(BALIVE^2) + 
                    I(PPT_c_anom^2) + I(PPT_wd_anom^2) + I(PPT_m_anom^2) + 
                    I(T_c_anom^2) + I(T_wd_anom^2) + (T_m_anom^2) + 
                    (1|PLT_CN), data = grdata.scaled)
gmodel.3e <- lmer(DIA_INCR ~ PREVDIA + BALIVE + PPT_yr_anom + T_yr_anom + PPT_yr_norm + T_yr_norm + 
                    I(PREVDIA^2) + I(BALIVE^2) + 
                    I(PPT_yr_anom^2) + I(T_yr_anom^2) + I(PPT_yr_norm^2) + I(T_yr_norm^2) + 
                    (1|PLT_CN), data = grdata.scaled)
gmodel.3f <- lmer(DIA_INCR ~ PREVDIA + BALIVE + PPT_c_norm + PPT_wd_norm + PPT_m_norm + 
                    T_c_norm + T_wd_norm + T_m_norm + I(PREVDIA^2) + I(BALIVE^2) + 
                    I(PPT_c_norm^2) + I(PPT_wd_norm^2) + I(PPT_m_norm^2) + 
                    I(T_c_norm^2) + I(T_wd_norm^2) + (T_m_norm^2) + 
                    PPT_c_anom + PPT_wd_anom + PPT_m_anom + 
                    T_c_anom + T_wd_anom + T_m_anom + 
                    I(PPT_c_anom^2) + I(PPT_wd_anom^2) + I(PPT_m_anom^2) + 
                    I(T_c_anom^2) + I(T_wd_anom^2) + (T_m_anom^2) + 
                    (1|PLT_CN), data = grdata.scaled)
gmodel.3g <- lmer(DIA_INCR ~ PREVDIA + BALIVE + PPTex_yr_anom + Tex_yr_anom + I(PREVDIA^2) + I(BALIVE^2) + 
                    I(PPTex_yr_anom^2) + I(Tex_yr_anom^2) + 
                    (1|PLT_CN), data = grdata.scaled)
gmodel.3h <- lmer(DIA_INCR ~ PREVDIA + BALIVE + PPTex_c_anom + PPTex_wd_anom + PPTex_m_anom + 
                     Tex_c_anom + Tex_wd_anom + Tex_m_anom + I(PREVDIA^2) + I(BALIVE^2) + 
                     I(PPTex_c_anom^2) + I(PPTex_wd_anom^2) + I(PPTex_m_anom^2) + 
                     I(Tex_c_anom^2) + I(Tex_wd_anom^2) + (Tex_m_anom^2) + 
                     (1|PLT_CN), data = grdata.scaled)
gmodel.3i <- lmer(DIA_INCR ~ PREVDIA + BALIVE + PPT_yr_norm + T_yr_norm + I(PREVDIA^2) + I(BALIVE^2) + 
                    I(PPT_yr_norm^2) + I(T_yr_norm^2) + PPTex_yr_anom + Tex_yr_anom + 
                    I(PPTex_yr_anom^2) + I(Tex_yr_anom^2) + 
                    (1|PLT_CN), data = grdata.scaled)
gmodel.3j <- lmer(DIA_INCR ~ PREVDIA + BALIVE + PPT_c_norm + PPT_wd_norm + PPT_m_norm + 
                    T_c_norm + T_wd_norm + T_m_norm + I(PREVDIA^2) + I(BALIVE^2) + 
                    I(PPT_c_norm^2) + I(PPT_wd_norm^2) + I(PPT_m_norm^2) + 
                    I(T_c_norm^2) + I(T_wd_norm^2) + (T_m_norm^2) + 
                    PPTex_c_anom + PPTex_wd_anom + PPTex_m_anom + 
                    Tex_c_anom + Tex_wd_anom + Tex_m_anom + 
                    I(PPTex_c_anom^2) + I(PPTex_wd_anom^2) + I(PPTex_m_anom^2) + 
                    I(Tex_c_anom^2) + I(Tex_wd_anom^2) + (Tex_m_anom^2) + 
                    (1|PLT_CN), data = grdata.scaled)

mod.comp3 <- model.sel(gmodel.1b, gmodel.3a, gmodel.3b, gmodel.3c, gmodel.3d, gmodel.3e, gmodel.3f, 
                       gmodel.3g, gmodel.3h, gmodel.3i, gmodel.3j)
@

<<>>=
mod.comp3
@

The model using census-interval climate data was still the best.

\subsection{Add drought anomalies}
<<echo=FALSE>>=
gmodel.4a<- lmer(DIA_INCR ~ PREVDIA + BALIVE + PPT_yr + T_yr + PPT_drought + Tmean_drought + 
                               I(PREVDIA^2) + I(BALIVE^2) + 
                               I(PPT_yr^2) + I(T_yr^2) + I(PPT_drought^2) + I(Tmean_drought^2) + 
                               (1|PLT_CN), data = grdata.scaled)
gmodel.4b<- lmer(DIA_INCR ~ PREVDIA + BALIVE + PPT_yr + T_yr + 
                               PPT_pf_dr + PPT_c_dr + PPT_fs_dr + PPT_m_dr + Tmean_drought + 
                               I(PREVDIA^2) + I(BALIVE^2) + I(PPT_yr^2) + I(T_yr^2) + 
                               I(PPT_c_dr^2) + I(PPT_fs_dr^2) + I(PPT_m_dr^2) + I(Tmean_drought^2) + 
                               (1|PLT_CN), data = grdata.scaled)
gmodel.4c<- lmer(DIA_INCR ~ PREVDIA + BALIVE + PPT_yr + T_yr + PPT_dr_anom + T_dr_anom + 
                   I(PREVDIA^2) + I(BALIVE^2) + 
                   I(PPT_yr^2) + I(T_yr^2) + I(PPT_dr_anom^2) + I(T_dr_anom^2) + 
                   (1|PLT_CN), data = grdata.scaled)
gmodel.4d<- lmer(DIA_INCR ~ PREVDIA + BALIVE + PPT_yr + T_yr + 
                   PPT_pf_dr_anom + PPT_c_dr_anom + PPT_fs_dr_anom + PPT_m_dr_anom + T_dr_anom + 
                   I(PREVDIA^2) + I(BALIVE^2) + I(PPT_yr^2) + I(T_yr^2) + 
                   I(PPT_c_dr_anom^2) + I(PPT_fs_dr_anom^2) + I(PPT_m_dr_anom^2) + I(T_dr_anom^2) + 
                   (1|PLT_CN), data = grdata.scaled)
mod.comp4<-model.sel(gmodel.1b,gmodel.4a,gmodel.4b,gmodel.4c,gmodel.4d)
@

<<>>=
mod.comp4
@

There was no support for adding drought anomalies.

\subsection{Add interactions}
<<echo=FALSE>>=
gmodel.5a <- lmer(DIA_INCR ~ (PREVDIA + BALIVE + PPT_yr + T_yr)^2 + 
                    (1|PLT_CN), data = grdata.scaled)
gmodel.5b <- lmer(DIA_INCR ~ (PREVDIA + BALIVE + PPT_yr + T_yr)^2 + I(PREVDIA^2) + I(BALIVE^2) + 
                    I(PPT_yr^2) + I(T_yr^2) + 
                    (1|PLT_CN), data = grdata.scaled)
mod.comp5 <- model.sel(gmodel.1b, gmodel.5a, gmodel.5b)
@

<<>>=
mod.comp5
@

There was no support for adding interactions.

\subsection{Model selection summary}
The best model that came out of the more thorough model selection used annual temperature and precipitation during the census interval as the climate predictors, and included quadratics but no interactions.

<<>>=
summary(gmodel.1b)
@

The models I will export for use in the IPMs are:
\begin{enumerate}
\item{grow \~{} dia + ppt.norm + temp.norm + dia\textsuperscript{2} + + ppt.norm\textsuperscript{2} + temp.norm\textsuperscript{2}}
\item{grow \~{} dia + balive + ppt.norm + temp.norm + dia\textsuperscript{2} + balive\textsuperscript{2} + ppt.norm\textsuperscript{2} + temp.norm\textsuperscript{2}}
\item{grow \~{} dia \** balive \** ppt.norm \** temp.norm + dia\textsuperscript{2} + balive\textsuperscript{2} + ppt.norm\textsuperscript{2} + temp.norm\textsuperscript{2}}
\item{grow \~{} dia + balive + ppt.yr + temp.yr + dia\textsuperscript{2} + balive\textsuperscript{2} + ppt.yr\textsuperscript{2} + temp.yr\textsuperscript{2}}
\end{enumerate}

The effects plots for these models are below.

\section{Effects plots}
<<echo=false>>=
gmodel.clim <- lmer(DIA_INCR ~ PREVDIA + PPT_yr_norm + T_yr_norm + I(PREVDIA^2) + 
                      I(PPT_yr_norm^2) + I(T_yr_norm^2) + 
                      (1|PLT_CN), data = grdata.scaled)
gmodel.clim.comp <- lmer(DIA_INCR ~ PREVDIA + BALIVE + PPT_yr_norm + T_yr_norm + I(PREVDIA^2) + 
                           I(BALIVE^2) + I(PPT_yr_norm^2) + I(T_yr_norm^2) + 
                           (1|PLT_CN), data = grdata.scaled)
gmodel.int <- lmer(DIA_INCR ~ (PREVDIA + BALIVE + PPT_yr_norm + T_yr_norm)^2 + I(PREVDIA^2) + 
                     I(BALIVE^2) + I(PPT_yr_norm^2) + I(T_yr_norm^2) + 
                     (1|PLT_CN), data = grdata.scaled)
gmodel.best<- lmer(DIA_INCR ~ PREVDIA + BALIVE + PPT_yr + T_yr + I(PREVDIA^2) + I(BALIVE^2) + 
                     I(PPT_yr^2) + I(T_yr^2) + 
                     (1|PLT_CN), data = grdata.scaled)
@

\begin{figure}[H]
\begin{minipage}[b]{.5\linewidth}
<<fig=TRUE,echo=false>>=
plot(effect("PREVDIA", gmodel.clim))
@
  \end{minipage}%
  \begin{minipage}[b]{.5\linewidth}
<<fig=TRUE,echo=false>>=
plot(effect("PPT_yr_norm", gmodel.clim))
@
  \end{minipage}
  \begin{minipage}[b]{.5\linewidth}
<<fig=TRUE,echo=false>>=
plot(effect("T_yr_norm", gmodel.clim))
@
  \end{minipage}
\caption{Effects plots for climate-only model.}
\end{figure}

\begin{figure}[H]
  \begin{minipage}[b]{.5\linewidth}
<<fig=TRUE,echo=false>>=
plot(effect("PREVDIA", gmodel.clim.comp))
@
  \end{minipage}%
  \begin{minipage}[b]{.5\linewidth}
<<fig=TRUE,echo=false>>=
plot(effect("BALIVE", gmodel.clim.comp))
@
  \end{minipage}
  \begin{minipage}[b]{.5\linewidth}
<<fig=TRUE,echo=false>>=
plot(effect("PPT_yr_norm", gmodel.clim.comp))
@
  \end{minipage}%
  \begin{minipage}[b]{.5\linewidth}
<<fig=TRUE,echo=false>>=
plot(effect("T_yr_norm", gmodel.clim.comp))
@
  \end{minipage}
\caption{Effects plots for climate and competition model, no interactions.}
\end{figure}

\begin{figure}[H]
  \begin{minipage}[b]{.5\linewidth}
<<fig=TRUE,echo=false>>=
plot(effect("PREVDIA", gmodel.int))
@
  \end{minipage}%
  \begin{minipage}[b]{.5\linewidth}
<<fig=TRUE,echo=false>>=
plot(effect("BALIVE", gmodel.int))
@
  \end{minipage}
  \begin{minipage}[b]{.5\linewidth}
<<fig=TRUE,echo=false>>=
plot(effect("PPT_yr_norm", gmodel.int))
@
  \end{minipage}%
  \begin{minipage}[b]{.5\linewidth}
<<fig=TRUE,echo=false>>=
plot(effect("T_yr_norm", gmodel.int))
@
  \end{minipage}
\caption{Effects plots for climate and competition model, with interactions.}
\end{figure}

\begin{figure}[H]
  \begin{minipage}[b]{.5\linewidth}
<<fig=TRUE,echo=false>>=
plot(effect("PREVDIA", gmodel.best))
@
  \end{minipage}%
  \begin{minipage}[b]{.5\linewidth}
<<fig=TRUE,echo=false>>=
plot(effect("BALIVE", gmodel.best))
@
  \end{minipage}
  \begin{minipage}[b]{.5\linewidth}
<<fig=TRUE,echo=false>>=
plot(effect("PPT_yr", gmodel.best))
@
  \end{minipage}%
  \begin{minipage}[b]{.5\linewidth}
<<fig=TRUE,echo=false>>=
plot(effect("T_yr", gmodel.best))
@
  \end{minipage}
\caption{Effects plots for "best" model.}
\end{figure}

<<echo=FALSE>>=
g_fun_dia<-function(dia,coef,ba,ppt,t){
  return(coef[1]+coef[2]*dia+coef[6]*(dia^2)+coef[3]*ba+coef[7]*(ba^2)+coef[4]*ppt+coef[8]*(ppt^2)+
           coef[5]*t+coef[9]*(t^2))
}
g_fun_ba<-function(ba,dia,coef,ppt,t){
  return(coef[1]+coef[2]*dia+coef[6]*(dia^2)+coef[3]*ba+coef[7]*(ba^2)+coef[4]*ppt+coef[8]*(ppt^2)+
           coef[5]*t+coef[9]*(t^2))
}
g_fun_ppt<-function(ppt,dia,coef,ba,t){
  return(coef[1]+coef[2]*dia+coef[6]*(dia^2)+coef[3]*ba+coef[7]*(ba^2)+coef[4]*ppt+coef[8]*(ppt^2)+
           coef[5]*t+coef[9]*(t^2))
}
g_fun_t<-function(t,dia,coef,ba,ppt){
  return(coef[1]+coef[2]*dia+coef[6]*(dia^2)+coef[3]*ba+coef[7]*(ba^2)+coef[4]*ppt+coef[8]*(ppt^2)+
           coef[5]*t+coef[9]*(t^2))
}
g_dia_plot<-ggplot(data=grdata.scaled,aes(x=PREVDIA,y=DIA_INCR))+
  geom_point(alpha=0.7)+
  stat_function(fun=g_fun_dia,args=list(coef=fixef(gmodel.best),ba=mean(grdata.scaled$BALIVE),
                                    ppt=mean(grdata.scaled$PPT_yr),t=mean(grdata.scaled$T_yr)),
                col="red")

g_ba_plot<-ggplot(data=grdata.scaled,aes(x=BALIVE,y=DIA_INCR))+
  geom_point(alpha=0.7)+
  stat_function(fun=g_fun_ba,args=list(coef=fixef(gmodel.best),dia=mean(grdata.scaled$PREVDIA),
                                    ppt=mean(grdata.scaled$PPT_yr),t=mean(grdata.scaled$T_yr)),
                col="red")
g_ppt_plot<-ggplot(data=grdata.scaled,aes(x=PPT_yr,y=DIA_INCR))+
  geom_point(alpha=0.7)+
  stat_function(fun=g_fun_ppt,args=list(coef=fixef(gmodel.best),ba=mean(grdata.scaled$BALIVE),
                                    dia=mean(grdata.scaled$PREVDIA),t=mean(grdata.scaled$T_yr)),
                col="red")
g_t_plot<-ggplot(data=grdata.scaled,aes(x=T_yr,y=DIA_INCR))+
  geom_point(alpha=0.7)+
  stat_function(fun=g_fun_t,args=list(coef=fixef(gmodel.best),ba=mean(grdata.scaled$BALIVE),
                                    ppt=mean(grdata.scaled$PPT_yr),dia=mean(grdata.scaled$PREVDIA)),
                col="red")
@

<<echo=FALSE>>=
multiplot <- function(..., plotlist=NULL, file, cols=1, layout=NULL) {
  library(grid)
  
  # Make a list from the ... arguments and plotlist
  plots <- c(list(...), plotlist)
  
  numPlots = length(plots)
  
  # If layout is NULL, then use 'cols' to determine layout
  if (is.null(layout)) {
    # Make the panel
    # ncol: Number of columns of plots
    # nrow: Number of rows needed, calculated from # of cols
    layout <- matrix(seq(1, cols * ceiling(numPlots/cols)),
                     ncol = cols, nrow = ceiling(numPlots/cols))
  }
  
  if (numPlots==1) {
    print(plots[[1]])
    
  } else {
    # Set up the page
    grid.newpage()
    pushViewport(viewport(layout = grid.layout(nrow(layout), ncol(layout))))
    
    # Make each plot, in the correct location
    for (i in 1:numPlots) {
      # Get the i,j matrix positions of the regions that contain this subplot
      matchidx <- as.data.frame(which(layout == i, arr.ind = TRUE))
      
      print(plots[[i]], vp = viewport(layout.pos.row = matchidx$row,
                                      layout.pos.col = matchidx$col))
    }
  }
}
@

\begin{figure}[H]
<<fig=TRUE,echo=FALSE>>=
multiplot(g_dia_plot,g_ppt_plot,g_ba_plot,g_t_plot,cols=2)
@
\caption{Effects plots for ``best" model, plotted over raw data.}
\end{figure}

\end{document}