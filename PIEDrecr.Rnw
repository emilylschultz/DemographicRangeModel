\documentclass{article}

\title{PIED recruitment models}

\usepackage{float}
\usepackage{subcaption}

\begin{document}
\SweaveOpts{concordance=TRUE}

\maketitle

\section{Overview}

\begin{enumerate}
\item{Select adult PIED offset (BA.PIED, cumDIA.PIED, PIEDadults1)}
\item{Select basal area predictor}
\end{enumerate}

To test between the climate-only approach typically used in climate envelope modeling and including competition, as motivated by DMB, we created two different models:

\begin{enumerate}
\item{Climate only (simple): using temp and ppt norms + quadratics}
\item{Climate + competition (simple): same as climate only, but with BALIVE (and quadratic) added}
\end{enumerate}

We then created two more complex models to test how increasing model complexity, which generally improves AIC at the vital rate level, changes our predicted distributions. 

\begin{enumerate}
\item Climate + competition (interactions): climate + competition, but includes 2-way interactions between linear predictors
\item Climate + competition (complex):
\begin{enumerate}
 \item Test between temperature and vpd
 \item Compare annual, 3-season, and 4-season
 \item Compare normals, census interval, anomalies, and anomalies + norms
 \item Add drought anomalies
 \begin{enumerate}
	\item total ppt and mean temp during drought
	\item 3-season ppt and mean temp during drought
	\item total ppt and temp anomalies during drought
	\item 3-season ppt and temp anomalies during drought
 \end{enumerate}  
 \item Add interactions (interactions without quadratics vs interactions + quadratics)
 \end{enumerate}
\end{enumerate}

<<echo=FALSE>>=
library(ggeffects)
library(ggplot2)
library(coefplot)
library(cowplot)
library(effects)
library(MuMIn)
library(dplyr)
library(DHARMa)
library(lme4)
library(glmmTMB)

rdata <- read.csv("./Processed/Recruitment/RecruitData.csv", header = T, stringsAsFactors = F)

#rdata <- read.csv("C:/Users/mekevans/Documents/Cdrive/Bayes/DemogRangeMod/ProofOfConcept/FIA-data/westernData/NewData/IWStates/PIED_IPM/MEKEvans/Processed/Recruitment/RecruitData.csv", header = T, stringsAsFactors = F)

# looking at the data
recruit.table <- table(rdata[, c("PIEDadults1", "recruits1")])

plot.info <- c("plot", "lat", "lon", "elev", "state", "county", "plotID", "PIEDadults1", "recruits1")
colonize.plots <- rdata[rdata$PIEDadults1 == 0 & rdata$recruits1 > 0, plot.info]

# Subset data: only plots that contained PIED trees at time 1 census
# AGB: note that it was previously incorrectly time 2
rdata <- subset(rdata, PIEDadults1 > 0)
rdata2 <- subset(rdata, BALIVE < 400) # 6720
rdata$BA.all <- rdata$BA.PIED + rdata$BA.notPIED
rdata.scaled <- rdata %>% mutate_at(scale, .vars = vars(-plot, -lat, -lon, -elev, -PApied,
                                                        -state, -county, -plotID, -CONDID, 
                                                          -measYear, -plotPrev, -PREV_MEASYEAR,
                                                          -CENSUS_INTERVAL, -recruits1, -recruits12,
                                                          -AGB_intra, -BA.PIED, -PIEDadults1,
                                                          -PIEDadults4, -PIEDadults8, -cumDIA.PIED))
@

\section{Histograms}
<<echo=FALSE>>=
multiplot <- function(..., plotlist=NULL, file, cols=1, layout=NULL) {
  library(grid)
  
  # Make a list from the ... arguments and plotlist
  plots <- c(list(...), plotlist)
  
  numPlots = length(plots)
  
  # If layout is NULL, then use 'cols' to determine layout
  if (is.null(layout)) {
    # Make the panel
    # ncol: Number of columns of plots
    # nrow: Number of rows needed, calculated from # of cols
    layout <- matrix(seq(1, cols * ceiling(numPlots/cols)),
                     ncol = cols, nrow = ceiling(numPlots/cols))
  }
  
  if (numPlots==1) {
    print(plots[[1]])
    
  } else {
    # Set up the page
    grid.newpage()
    pushViewport(viewport(layout = grid.layout(nrow(layout), ncol(layout))))
    
    # Make each plot, in the correct location
    for (i in 1:numPlots) {
      # Get the i,j matrix positions of the regions that contain this subplot
      matchidx <- as.data.frame(which(layout == i, arr.ind = TRUE))
      
      print(plots[[i]], vp = viewport(layout.pos.row = matchidx$row,
                                      layout.pos.col = matchidx$col))
    }
  }
}
@

\begin{figure}[H]
<<fig=TRUE, echo=FALSE>>=
par(mfrow=c(3,2))
hist(rdata$recruits1)
plot(rdata$PIEDadults1, rdata$recruits1)
hist(rdata$recruits1, breaks = c(seq(0, 8, by = 1)), xlim = c(0, 8))
plot(rdata$BALIVE, rdata$recruits1)
hist(rdata$PIEDadults1, breaks = c(seq(0,53, by=1)), xlim = c(0, 53))
plot(rdata$PPT_yr_norm, rdata$recruits1)
@
\end{figure}

\begin{figure}[H]
<<fig=TRUE,echo=FALSE>>=
par(mfrow=c(2,2))
hist(rdata$BALIVE)
hist(rdata$BALIVE, breaks = c(seq(0, 750, by = 10)), xlim = c(0, 500))
hist(rdata2$BALIVE, breaks = c(seq(0, 400, by = 10)), xlim = c(0, 400))
@
\end{figure}

\section{Models}
\subsection{Selecting offset}
<<echo=FALSE>>=
# From https://github.com/glmmTMB/glmmTMB/blob/7ba86a972ddb13226a8de9eab0e113e6156fccf4/glmmTMB/R/effects.R
Effect.glmmTMB <- function (focal.predictors, mod, ...) {
    fam <- family(mod)
    ## code to make the 'truncated_*' families work
    if (grepl("^truncated", fam$family)) 
        fam <- c(fam, make.link(fam$link))
    ## dummy functions to make Effect.default work
    dummyfuns <- list(variance=function(mu) mu,
                      initialize=expression(mustart <- y + 0.1),
                      dev.resids=function(...) poisson()$dev.res(...)
                      )
    for (i in names(dummyfuns)) {
        if (is.null(fam[[i]])) fam[[i]] <- dummyfuns[[i]]
    }
    ## allow calculation of effects ...
    if (length(formals(fam$variance))>1) {
        warning("overriding variance function for effects: ",
                "computed variances may be incorrect")
        fam$variance <- dummyfuns$variance
    }
    args <- list(call = getCall(mod),
                 coefficients = lme4::fixef(mod)[["cond"]],
                 vcov = vcov(mod)[["cond"]],
                 family=fam)
    if (!requireNamespace("effects"))
        stop("please install the effects package")
    effects::Effect.default(focal.predictors, mod, ..., sources = args)
}
@

Only the model with PIEDadults1 had acceptable residuals, so we will proceed with that throughout the rest of the model selection.

\subsectioni{Select basal area predictor}
<<echo=FALSE>>=
rmodel.6a <- glmmTMB(recruits1 ~ 1 + BA.PIPO + PPT_yr_norm + T_yr_norm + 
                       offset(log(CENSUS_INTERVAL)) + 
                       offset(log(PIEDadults1)), # various alternatives for this offset
                     ziformula = ~ 1,
                     data = rdata.scaled, family = "poisson")
rmodel.6b <- glmmTMB(recruits1 ~ 1 + BA.notPIED + PPT_yr_norm + T_yr_norm + 
                       offset(log(CENSUS_INTERVAL)) + 
                       offset(log(PIEDadults1)), # various alternatives for this offset
                     ziformula = ~ 1,
                     data = rdata.scaled, family = "poisson")
rmodel.6c <- glmmTMB(recruits1 ~ 1 + BA.juniper + PPT_yr_norm + T_yr_norm + 
                       offset(log(CENSUS_INTERVAL)) + 
                       offset(log(PIEDadults1)), # various alternatives for this offset
                     ziformula = ~ 1,
                     data = rdata.scaled, family = "poisson")
rmodel.6d <- glmmTMB(recruits1 ~ 1 + BALIVE + PPT_yr_norm + T_yr_norm + 
                       offset(log(CENSUS_INTERVAL)) + 
                       offset(log(PIEDadults1)), # various alternatives for this offset
                     ziformula = ~ 1,
                     data = rdata.scaled, family = "poisson")
mod.comp6<-model.sel(rmodel.6d,rmodel.6a,rmodel.6b,rmodel.6c)
@

The model using BALIVE was the best.

\subsection{Show the effect of addng quadratics}
<<echo=FALSE>>=
rmodel.lin <- glmmTMB(recruits1 ~ 1 + BALIVE + PPT_yr_norm + T_yr_norm + 
                      offset(log(CENSUS_INTERVAL)) + 
                      offset(log(PIEDadults1)), # various alternatives for this offset
                    ziformula = ~ 1,
                    data = rdata.scaled, family = "poisson")
rmodel.q <- glmmTMB(recruits1 ~ 1 + BALIVE + PPT_yr_norm + T_yr_norm + 
        I(BALIVE^2) + I(PPT_yr_norm^2) + I(T_yr_norm^2) + 
        offset(log(CENSUS_INTERVAL)) + 
        offset(log(PIEDadults1)), # various alternatives for this offset
        ziformula = ~ 1,
        data = rdata.scaled, family = "poisson")
mod.comp0<-model.sel(rmodel.lin,rmodel.q)
@

<<>>=
mod.comp0
@

There was a strong preference for including quadratics, which is why we decided quadratics should be included in the ``simple" climate models.

\subsection{Compare norms to different time windows}
<<echo=FALSE>>=
rmodel.1a <- glmmTMB(recruits1 ~ 1
                        + BALIVE + I(BALIVE^2)
                        + PPT_yr_window_25 + I(PPT_yr_window_25^2)
                        + T_yr_window_25 + I(T_yr_window_25^2)
                        + offset(log(CENSUS_INTERVAL))
                        + offset(log(PIEDadults1)), 
                        ziformula = ~ 1,
                        data = rdata.scaled, 
                        family = "poisson")
rmodel.1b <- glmmTMB(recruits1 ~ 1
                        + BALIVE + I(BALIVE^2)
                        + PPT_yr_window_20 + I(PPT_yr_window_20^2)
                        + T_yr_window_20 + I(T_yr_window_20^2)
                        + offset(log(CENSUS_INTERVAL))
                        + offset(log(PIEDadults1)), 
                        ziformula = ~ 1,
                        data = rdata.scaled, 
                        family = "poisson")
# 15 yrs (Poisson)
rmodel.1c <- glmmTMB(recruits1 ~ 1
                        + BALIVE + I(BALIVE^2)
                        + PPT_yr_window_15 + I(PPT_yr_window_15^2)
                        + T_yr_window_15 + I(T_yr_window_15^2)
                        + offset(log(CENSUS_INTERVAL))
                        + offset(log(PIEDadults1)), 
                        ziformula = ~ 1,
                        data = rdata.scaled, 
                        family = "poisson")
mod.comp1 <- model.sel(rmodel.q,rmodel.1a, rmodel.1b,rmodel.1c)
@

<<>>=
mod.comp1
@

There was no difference between different time windows, so we proceeded with norms, as were used in other vital rate models.

\subsection{Compare annual, 3-season, and 4-season}
<<echo=FALSE>>=
rmodel.2a <- glmmTMB(recruits1 ~ 1 + BALIVE + PPT_c_norm + PPT_wd_norm + PPT_m_norm + 
                       T_c_norm + T_wd_norm + T_m_norm + 
                      I(BALIVE^2) + 
                      I(PPT_c_norm^2) + I(PPT_wd_norm^2) + I(PPT_m_norm^2) + 
                      I(T_c_norm^2) + I(T_wd_norm^2) + (T_m_norm^2) +
                      offset(log(CENSUS_INTERVAL)) + 
                      offset(log(PIEDadults1)), # various alternatives for this offset
                    ziformula = ~ 1,
                    data = rdata.scaled, family = "poisson")
rmodel.2b <- glmmTMB(recruits1 ~ 1 + BALIVE + PPT_c_norm + + PPT_pf_norm + PPT_fs_norm + PPT_m_norm + 
                       T_c_norm + T_pf_norm + T_fs_norm + T_m_norm + 
                       I(BALIVE^2) + 
                       I(PPT_c_norm^2) + I(PPT_pf_norm^2) + I(PPT_fs_norm^2) + I(PPT_m_norm^2) + 
                      I(T_c_norm^2) + I(T_pf_norm^2) + I(T_fs_norm^2) + (T_m_norm^2) + 
                      offset(log(CENSUS_INTERVAL)) + 
                      offset(log(PIEDadults1)), # various alternatives for this offset
                    ziformula = ~ 1,
                    data = rdata.scaled, family = "poisson")

mod.comp2 <- model.sel(rmodel.q, rmodel.2a, rmodel.2b)
@

<<>>=
mod.comp2
@

The best model used 3-season climate predictors.

\subsection{Compare normals vs anomalies}
<<echo=FALSE>>=
rmodel.3a <- glmmTMB(recruits1 ~ 1 + BALIVE + PPT_yr_anom + T_yr_anom + I(BALIVE^2) + 
                       I(PPT_yr_anom^2) + I(T_yr_anom^2) + 
                       offset(log(CENSUS_INTERVAL)) + 
                       offset(log(PIEDadults1)), # various alternatives for this offset
                     ziformula = ~ 1,
                     data = rdata.scaled, family = "poisson")
rmodel.3b <- glmmTMB(recruits1 ~ 1 + BALIVE + PPT_c_anom + PPT_wd_anom + PPT_m_anom + 
                       T_c_anom + T_wd_anom + T_m_anom + I(BALIVE^2) + 
                       I(PPT_c_anom^2) + I(PPT_wd_anom^2) + I(PPT_m_anom^2) + 
                       I(T_c_anom^2) + I(T_wd_anom^2) + (T_m_anom^2) + 
                       offset(log(CENSUS_INTERVAL)) + 
                       offset(log(PIEDadults1)), # various alternatives for this offset
                     ziformula = ~ 1,
                     data = rdata.scaled, family = "poisson")
rmodel.3c <- glmmTMB(recruits1 ~ 1 + BALIVE + PPT_yr_anom + T_yr_anom + PPT_yr_norm + T_yr_norm + 
                       I(BALIVE^2) + 
                       I(PPT_yr_anom^2) + I(T_yr_anom^2) + I(PPT_yr_norm^2) + I(T_yr_norm^2) + 
                       offset(log(CENSUS_INTERVAL)) + 
                       offset(log(PIEDadults1)), # various alternatives for this offset
                     ziformula = ~ 1,
                     data = rdata.scaled, family = "poisson")
rmodel.3d <- glmmTMB(recruits1 ~ 1 + BALIVE + PPT_c_norm + PPT_wd_norm + PPT_m_norm + 
                       T_c_norm + T_wd_norm + T_m_norm + I(BALIVE^2) + 
                       I(PPT_c_norm^2) + I(PPT_wd_norm^2) + I(PPT_m_norm^2) + 
                       I(T_c_norm^2) + I(T_wd_norm^2) + (T_m_norm^2) + 
                       PPT_c_anom + PPT_wd_anom + PPT_m_anom + 
                       T_c_anom + T_wd_anom + T_m_anom + 
                       I(PPT_c_anom^2) + I(PPT_wd_anom^2) + I(PPT_m_anom^2) + 
                       I(T_c_anom^2) + I(T_wd_anom^2) + (T_m_anom^2) + 
                       offset(log(CENSUS_INTERVAL)) + 
                       offset(log(PIEDadults1)), # various alternatives for this offset
                     ziformula = ~ 1,
                     data = rdata.scaled, family = "poisson")
rmodel.3e <- glmmTMB(recruits1 ~ 1 + BALIVE + PPTex_yr_anom + Tex_yr_anom + I(BALIVE^2) + 
                       I(PPTex_yr_anom^2) + I(Tex_yr_anom^2) + 
                       offset(log(CENSUS_INTERVAL)) + 
                       offset(log(PIEDadults1)), # various alternatives for this offset
                     ziformula = ~ 1,
                     data = rdata.scaled, family = "poisson")
rmodel.3f <- glmmTMB(recruits1 ~ 1 + BALIVE + PPTex_c_anom + PPTex_wd_anom + PPTex_m_anom + 
                       Tex_c_anom + Tex_wd_anom + Tex_m_anom + I(BALIVE^2) + 
                       I(PPTex_c_anom^2) + I(PPTex_wd_anom^2) + I(PPTex_m_anom^2) + 
                       I(Tex_c_anom^2) + I(Tex_wd_anom^2) + (Tex_m_anom^2) + 
                       offset(log(CENSUS_INTERVAL)) + 
                       offset(log(PIEDadults1)), # various alternatives for this offset
                     ziformula = ~ 1,
                     data = rdata.scaled, family = "poisson")
rmodel.3g <- glmmTMB(recruits1 ~ 1 + BALIVE + PPT_yr_norm + T_yr_norm + I(BALIVE^2) + 
                       I(PPT_yr_norm^2) + I(T_yr_norm^2) + PPTex_yr_anom + Tex_yr_anom + 
                       I(PPTex_yr_anom^2) + I(Tex_yr_anom^2) + 
                       offset(log(CENSUS_INTERVAL)) + 
                       offset(log(PIEDadults1)), # various alternatives for this offset
                     ziformula = ~ 1,
                     data = rdata.scaled, family = "poisson")
rmodel.3h <- glmmTMB(recruits1 ~ 1 + BALIVE + PPT_c_norm + PPT_wd_norm + PPT_m_norm + 
                       T_c_norm + T_wd_norm + T_m_norm + I(BALIVE^2) + 
                       I(PPT_c_norm^2) + I(PPT_wd_norm^2) + I(PPT_m_norm^2) + 
                       I(T_c_norm^2) + I(T_wd_norm^2) + (T_m_norm^2) + 
                       PPTex_c_anom + PPTex_wd_anom + PPTex_m_anom + 
                       Tex_c_anom + Tex_wd_anom + Tex_m_anom + 
                       I(PPTex_c_anom^2) + I(PPTex_wd_anom^2) + I(PPTex_m_anom^2) + 
                       I(Tex_c_anom^2) + I(Tex_wd_anom^2) + (Tex_m_anom^2) + 
                       offset(log(CENSUS_INTERVAL)) + 
                       offset(log(PIEDadults1)), # various alternatives for this offset
                     ziformula = ~ 1,
                     data = rdata.scaled, family = "poisson")

mod.comp3 <- model.sel(rmodel.2a, rmodel.3a, rmodel.3b, rmodel.3c, rmodel.3d, rmodel.3e, rmodel.3f,
                       rmodel.3g, rmodel.3h)
@

<<>>=
mod.comp3
@

The best model included both 3-season climate norms and 3-season climate extremes anomalies.

\subsection{Add drought anomalies}
<<echo=FALSE>>=
rmodel.4a <- glmmTMB(recruits1 ~ 1 + BALIVE + PPT_c_norm + PPT_wd_norm + PPT_m_norm + 
                       T_c_norm + T_wd_norm + T_m_norm + 
                       PPT_drought + Tmean_drought + I(BALIVE^2) + 
                       I(PPT_c_norm^2) + I(PPT_wd_norm^2) + I(PPT_m_norm^2) + 
                       I(T_c_norm^2) + I(T_wd_norm^2) + (T_m_norm^2) + 
                       PPTex_c_anom + PPTex_wd_anom + PPTex_m_anom + 
                       Tex_c_anom + Tex_wd_anom + Tex_m_anom + 
                       I(PPTex_c_anom^2) + I(PPTex_wd_anom^2) + I(PPTex_m_anom^2) + 
                       I(Tex_c_anom^2) + I(Tex_wd_anom^2) + (Tex_m_anom^2) + 
                       I(PPT_drought^2) + I(Tmean_drought^2) + 
                       offset(log(CENSUS_INTERVAL)) + 
                       offset(log(PIEDadults1)), # various alternatives for this offset
                     ziformula = ~ 1,
                     data = rdata.scaled, family = "poisson")
rmodel.4b <- glmmTMB(recruits1 ~ 1 + BALIVE + PPT_c_norm + PPT_wd_norm + PPT_m_norm + 
                       T_c_norm + T_wd_norm + T_m_norm + 
                       PPT_pf_dr + PPT_c_dr + PPT_fs_dr + PPT_m_dr + Tmean_drought + I(BALIVE^2) + 
                       I(PPT_c_norm^2) + I(PPT_wd_norm^2) + I(PPT_m_norm^2) + 
                       I(T_c_norm^2) + I(T_wd_norm^2) + (T_m_norm^2) + 
                       PPTex_c_anom + PPTex_wd_anom + PPTex_m_anom + 
                       Tex_c_anom + Tex_wd_anom + Tex_m_anom + 
                       I(PPTex_c_anom^2) + I(PPTex_wd_anom^2) + I(PPTex_m_anom^2) + 
                       I(Tex_c_anom^2) + I(Tex_wd_anom^2) + (Tex_m_anom^2) + 
                       I(PPT_pf_dr_anom^2) + I(PPT_c_dr^2) + I(PPT_fs_dr^2) + I(PPT_m_dr^2) + I(Tmean_drought^2) + 
                       offset(log(CENSUS_INTERVAL)) + 
                       offset(log(PIEDadults1)), # various alternatives for this offset
                     ziformula = ~ 1,
                     data = rdata.scaled, family = "poisson")
rmodel.4c <- glmmTMB(recruits1 ~ 1 + BALIVE + PPT_c_norm + PPT_wd_norm + PPT_m_norm + 
                       T_c_norm + T_wd_norm + T_m_norm + 
                       PPT_dr_anom + T_dr_anom + I(BALIVE^2) + 
                       I(PPT_c_norm^2) + I(PPT_wd_norm^2) + I(PPT_m_norm^2) + 
                       I(T_c_norm^2) + I(T_wd_norm^2) + (T_m_norm^2) + 
                       PPTex_c_anom + PPTex_wd_anom + PPTex_m_anom + 
                       Tex_c_anom + Tex_wd_anom + Tex_m_anom + 
                       I(PPTex_c_anom^2) + I(PPTex_wd_anom^2) + I(PPTex_m_anom^2) + 
                       I(Tex_c_anom^2) + I(Tex_wd_anom^2) + (Tex_m_anom^2) + 
                       I(PPT_dr_anom^2) + I(T_dr_anom^2) + 
                       offset(log(CENSUS_INTERVAL)) + 
                       offset(log(PIEDadults1)), # various alternatives for this offset
                     ziformula = ~ 1,
                     data = rdata.scaled, family = "poisson")
rmodel.4d <- glmmTMB(recruits1 ~ 1 + BALIVE + PPT_c_norm + PPT_wd_norm + PPT_m_norm + 
                       T_c_norm + T_wd_norm + T_m_norm + 
                       PPT_pf_dr_anom + PPT_c_dr_anom + PPT_fs_dr_anom + PPT_m_dr_anom + T_dr_anom + 
                       I(BALIVE^2) + 
                       I(PPT_c_norm^2) + I(PPT_wd_norm^2) + I(PPT_m_norm^2) + 
                       I(T_c_norm^2) + I(T_wd_norm^2) + (T_m_norm^2) + 
                       PPTex_c_anom + PPTex_wd_anom + PPTex_m_anom + 
                       Tex_c_anom + Tex_wd_anom + Tex_m_anom + 
                       I(PPTex_c_anom^2) + I(PPTex_wd_anom^2) + I(PPTex_m_anom^2) + 
                       I(Tex_c_anom^2) + I(Tex_wd_anom^2) + (Tex_m_anom^2) + 
                       I(PPT_pf_dr_anom^2) + I(PPT_c_dr_anom^2) + I(PPT_fs_dr_anom^2) + I(PPT_m_dr_anom^2) + I(T_dr_anom^2) + 
                       offset(log(CENSUS_INTERVAL)) + 
                       offset(log(PIEDadults1)), # various alternatives for this offset
                     ziformula = ~ 1,
                     data = rdata.scaled, family = "poisson")

mod.comp4<-model.sel(rmodel.3h,rmodel.4a,rmodel.4b,rmodel.4c,rmodel.4d)
@

<<>>=
mod.comp4
@

The model without drought and the model with annual drought anomalies were best, so I proceeded with the simpler model without drought.

\subsection{Add interactions}
<<echo=FALSE>>=
rmodel.5a <- glmmTMB(recruits1 ~ 1 + (BALIVE + PPT_c_norm + PPT_wd_norm + PPT_m_norm + 
                                        T_c_norm + T_wd_norm + T_m_norm + 
                                        PPT_dr_anom + T_dr_anom)^2 + 
                       offset(log(CENSUS_INTERVAL)) + 
                       offset(log(PIEDadults1)), # various alternatives for this offset
                     ziformula = ~ 1,
                     data = rdata.scaled, family = "poisson")
rmodel.5b <- glmmTMB(recruits1 ~ 1 + (BALIVE + PPT_c_norm + PPT_wd_norm + PPT_m_norm + 
                                        T_c_norm + T_wd_norm + T_m_norm)^2 + I(BALIVE^2) + 
                       I(PPT_c_norm^2) + I(PPT_wd_norm^2) + I(PPT_m_norm^2) + 
                       I(T_c_norm^2) + I(T_wd_norm^2) + (T_m_norm^2) + 
                       PPTex_c_anom + PPTex_wd_anom + PPTex_m_anom + 
                       Tex_c_anom + Tex_wd_anom + Tex_m_anom + 
                       I(PPTex_c_anom^2) + I(PPTex_wd_anom^2) + I(PPTex_m_anom^2) + 
                       I(Tex_c_anom^2) + I(Tex_wd_anom^2) + (Tex_m_anom^2) + 
                       offset(log(CENSUS_INTERVAL)) + 
                       offset(log(PIEDadults1)), # various alternatives for this offset
                     ziformula = ~ 1,
                     data = rdata.scaled, family = "poisson")

mod.comp5 <- model.sel(rmodel.3h, rmodel.5a, rmodel.5b)
@

<<>>=
mod.comp5
@

The best model included interactions in addition to quadratics.

\subsection{Model selection summary}

The best model that came out of the model selection process included live basal area; 3-season  climate norms; 3-season climate extremes anomalies; their interactions; and quadratics:

<<>>=
summary(rmodel.5b)
@

The models I will export for use in the IPMs are:
\begin{enumerate}
\item{recr \~{} balive + ppt + temp}
\item{recr \~{} balive \** ppt \** temp}
\item{recr \~{} balive + ppt + temp + balive\textsuperscript{2} + ppt\textsuperscript{2} + temp\textsuperscript{2}}
\item{recr \~{} balive \** ppt \** temp + balive\textsuperscript{2} + ppt\textsuperscript{2} + temp\textsuperscript{2}}
\item{recr \~{} balive \** ppt.c.norm \** ppt.wd.norm \** ppt.m.norm \** temp.c.norm \** temp.wd.norm \** temp.m.norm \** pptex.c.norm \** pptex.wd.norm \** pptex.m.norm \** tempex.c.norm \** tempex.wd.norm \** tempex.m.norm + balive\textsuperscript{2} + ppt.c.norm\textsuperscript{2} + ppt.wd.norm\textsuperscript{2} + ppt.m.norm\textsuperscript{2} + temp.c.norm\textsuperscript{2} + temp.wd.norm\textsuperscript{2} + temp.m.norm\textsuperscript{2} + pptex.c.norm\textsuperscript{2} + pptex.wd.norm\textsuperscript{2} + pptex.m.norm\textsuperscript{2} + tempex.c.norm\textsuperscript{2} + tempex.wd.norm\textsuperscript{2} + tempex.m.norm\textsuperscript{2}}
\end{enumerate}

The effects plots for these models are below.

\section{Effects plots}
<<echo=false>>=
rmodel.clim <- glmmTMB(recruits1 ~ PPT_yr_norm + T_yr_norm + 
                      I(PPT_yr_norm^2) + I(T_yr_norm^2) + 
                      offset(log(CENSUS_INTERVAL)) + 
                       offset(log(PIEDadults1)), # various alternatives for this offset
                     ziformula = ~ 1,
                     data = rdata.scaled, family = "poisson")
rmodel.clim.comp <- glmmTMB(recruits1 ~ BALIVE + PPT_yr_norm + T_yr_norm + 
                           I(BALIVE^2) + I(PPT_yr_norm^2) + I(T_yr_norm^2) + 
                           offset(log(CENSUS_INTERVAL)) + 
                       offset(log(PIEDadults1)), # various alternatives for this offset
                     ziformula = ~ 1,
                     data = rdata.scaled, family = "poisson")
rmodel.int <- glmmTMB(recruits1 ~ (BALIVE + PPT_yr_norm + T_yr_norm)^2 + 
                     I(BALIVE^2) + I(PPT_yr_norm^2) + I(T_yr_norm^2) + 
                     offset(log(CENSUS_INTERVAL)) + 
                       offset(log(PIEDadults1)), # various alternatives for this offset
                     ziformula = ~ 1,
                     data = rdata.scaled, family = "poisson")
rmodel.best<- rmodel.5b
@

\begin{figure}[H]
  \begin{minipage}[b]{.5\linewidth}
<<fig=TRUE,echo=false>>=
plot(Effect.glmmTMB("PPT_yr_norm", rmodel.clim))
@
  \end{minipage}%
  \begin{minipage}[b]{.5\linewidth}
<<fig=TRUE,echo=false>>=
plot(Effect.glmmTMB("T_yr_norm", rmodel.clim))
@
  \end{minipage}
\caption{Effects plots for climate-only model.}
\end{figure}

\begin{figure}[H]
  \begin{minipage}[b]{.5\linewidth}
<<fig=TRUE,echo=false>>=
plot(Effect.glmmTMB("BALIVE", rmodel.clim.comp))
@
  \end{minipage}%
  \begin{minipage}[b]{.5\linewidth}
<<fig=TRUE,echo=false>>=
plot(Effect.glmmTMB("PPT_yr_norm", rmodel.clim.comp))
@
  \end{minipage}
  \begin{minipage}[b]{.5\linewidth}
<<fig=TRUE,echo=false>>=
plot(Effect.glmmTMB("T_yr_norm", rmodel.clim.comp))
@
  \end{minipage}
\caption{Effects plots for climate and competition model, no interactions.}
\end{figure}

\begin{figure}[H]
  \begin{minipage}[b]{.5\linewidth}
<<fig=TRUE,echo=false>>=
plot(Effect.glmmTMB("BALIVE", rmodel.int))
@
  \end{minipage}%
  \begin{minipage}[b]{.5\linewidth}
<<fig=TRUE,echo=false>>=
plot(Effect.glmmTMB("PPT_yr_norm", rmodel.int))
@
  \end{minipage}
  \begin{minipage}[b]{.5\linewidth}
<<fig=TRUE,echo=false>>=
plot(Effect.glmmTMB("T_yr_norm", rmodel.int))
@
  \end{minipage}
\caption{Effects plots for climate and competition model, with interactions.}
\end{figure}


\begin{figure}[H]
  \begin{minipage}[b]{.5\linewidth}
<<fig=TRUE,echo=false>>=
plot(Effect.glmmTMB("BALIVE", rmodel.best))
@
  \end{minipage}%
  \begin{minipage}[b]{.5\linewidth}
<<fig=TRUE,echo=false>>=
plot(Effect.glmmTMB("PPT_c_norm", rmodel.best))
@
  \end{minipage}
  \begin{minipage}[b]{.5\linewidth}
<<fig=TRUE,echo=false>>=
plot(Effect.glmmTMB("PPT_wd_norm", rmodel.best))
@
  \end{minipage}%
  \begin{minipage}[b]{.5\linewidth}
<<fig=TRUE,echo=false>>=
plot(Effect.glmmTMB("PPT_m_norm", rmodel.best))
@
  \end{minipage}
  \begin{minipage}[b]{.5\linewidth}
<<fig=TRUE,echo=false>>=
plot(Effect.glmmTMB("T_c_norm", rmodel.best))
@
  \end{minipage}%
  \begin{minipage}[b]{.5\linewidth}
<<fig=TRUE,echo=false>>=
plot(Effect.glmmTMB("T_wd_norm", rmodel.best))
@
  \end{minipage}
  \begin{minipage}[b]{.5\linewidth}
<<fig=TRUE,echo=false>>=
plot(Effect.glmmTMB("T_m_norm", rmodel.best))
@
  \end{minipage}%
  \begin{minipage}[b]{.5\linewidth}
<<fig=TRUE,echo=false>>=
plot(Effect.glmmTMB("PPTex_c_anom", rmodel.best))
@
  \end{minipage}
  \begin{minipage}[b]{.5\linewidth}
<<fig=TRUE,echo=false>>=
plot(Effect.glmmTMB("PPTex_wd_anom", rmodel.best))
@
  \end{minipage}%
  \begin{minipage}[b]{.5\linewidth}
<<fig=TRUE,echo=false>>=
plot(Effect.glmmTMB("PPTex_m_anom", rmodel.best))
@
  \end{minipage}
  \begin{minipage}[b]{.5\linewidth}
<<fig=TRUE,echo=false>>=
plot(Effect.glmmTMB("Tex_c_anom", rmodel.best))
@
  \end{minipage}%
  \begin{minipage}[b]{.5\linewidth}
<<fig=TRUE,echo=false>>=
plot(Effect.glmmTMB("Tex_wd_anom", rmodel.best))
@
  \end{minipage}
  \begin{minipage}[b]{.5\linewidth}
<<fig=TRUE,echo=false>>=
plot(Effect.glmmTMB("Tex_m_anom", rmodel.best))
@
  \end{minipage}
\caption{Effects plots for ``best" model.}
\end{figure}

<<echo=FALSE>>=
ba_seq<-seq(min(rdata.scaled$BALIVE,na.rm=T),max(rdata.scaled$BALIVE,na.rm=T),length=50)
ba_pred<-predict(rmodel.best, newdata=data.frame(BALIVE=ba_seq,
                      PPT_c_norm=median(rdata.scaled$PPT_c_norm,na.rm=T),
                      PPT_wd_norm=median(rdata.scaled$PPT_wd_norm,na.rm=T),
                      PPT_m_norm=median(rdata.scaled$PPT_m_norm,na.rm=T),
                      T_c_norm=median(rdata.scaled$T_c_norm,na.rm=T),
                      T_wd_norm=median(rdata.scaled$T_wd_norm,na.rm=T),
                      T_m_norm=median(rdata.scaled$T_m_norm,na.rm=T),
                      PPTex_c_anom=median(rdata.scaled$PPTex_c_anom,na.rm=T),
                      PPTex_wd_anom=median(rdata.scaled$PPTex_wd_anom,na.rm=T),
                      PPTex_m_anom=median(rdata.scaled$PPTex_m_anom,na.rm=T),
                      Tex_c_anom=median(rdata.scaled$Tex_c_anom,na.rm=T),
                      Tex_wd_anom=median(rdata.scaled$Tex_wd_anom,na.rm=T),
                      Tex_m_anom=median(rdata.scaled$Tex_m_anom,na.rm=T),CENSUS_INTERVAL=median(rdata.scaled$CENSUS_INTERVAL,na.rm=T),
                      PIEDadults1=median(rdata.scaled$PIEDadults1)), 
                 type = "response")

PPTc_seq<-seq(min(rdata.scaled$PPT_c_norm,na.rm=T),max(rdata.scaled$PPT_c_norm,
                                                           na.rm=T),length=50)
PPTc_pred<-predict(rmodel.best, newdata=data.frame(BALIVE=median(rdata.scaled$BALIVE,na.rm=T),
                      PPT_c_norm=PPTc_seq,
                      PPT_wd_norm=median(rdata.scaled$PPT_wd_norm,na.rm=T),
                      PPT_m_norm=median(rdata.scaled$PPT_m_norm,na.rm=T),
                      T_c_norm=median(rdata.scaled$T_c_norm,na.rm=T),
                      T_wd_norm=median(rdata.scaled$T_wd_norm,na.rm=T),
                      T_m_norm=median(rdata.scaled$T_m_norm,na.rm=T),
                      PPTex_c_anom=median(rdata.scaled$PPTex_c_anom,na.rm=T),
                      PPTex_wd_anom=median(rdata.scaled$PPTex_wd_anom,na.rm=T),
                      PPTex_m_anom=median(rdata.scaled$PPTex_m_anom,na.rm=T),
                      Tex_c_anom=median(rdata.scaled$Tex_c_anom,na.rm=T),
                      Tex_wd_anom=median(rdata.scaled$Tex_wd_anom,na.rm=T),
                      Tex_m_anom=median(rdata.scaled$Tex_m_anom,na.rm=T),
                      CENSUS_INTERVAL=median(rdata.scaled$CENSUS_INTERVAL,na.rm=T),
                      PIEDadults1=median(rdata.scaled$PIEDadults1)), 
                   type = "response")

PPTwd_seq<-seq(min(rdata.scaled$PPT_wd_norm,na.rm=T),max(rdata.scaled$PPT_wd_norm
                                                             ,na.rm=T),length=50)
PPTwd_pred<-predict(rmodel.best, newdata=data.frame(BALIVE=median(rdata.scaled$BALIVE,na.rm=T),
                      PPT_c_norm=median(rdata.scaled$PPT_c_norm,na.rm=T),
                      PPT_wd_norm=PPTwd_seq,
                      PPT_m_norm=median(rdata.scaled$PPT_m_norm,na.rm=T),
                      T_c_norm=median(rdata.scaled$T_c_norm,na.rm=T),
                      T_wd_norm=median(rdata.scaled$T_wd_norm,na.rm=T),
                      T_m_norm=median(rdata.scaled$T_m_norm,na.rm=T),
                      PPTex_c_anom=median(rdata.scaled$PPTex_c_anom,na.rm=T),
                      PPTex_wd_anom=median(rdata.scaled$PPTex_wd_anom,na.rm=T),
                      PPTex_m_anom=median(rdata.scaled$PPTex_m_anom,na.rm=T),
                      Tex_c_anom=median(rdata.scaled$Tex_c_anom,na.rm=T),
                      Tex_wd_anom=median(rdata.scaled$Tex_wd_anom,na.rm=T),
                      Tex_m_anom=median(rdata.scaled$Tex_m_anom,na.rm=T),
                      CENSUS_INTERVAL=median(rdata.scaled$CENSUS_INTERVAL,na.rm=T),
                      PIEDadults1=median(rdata.scaled$PIEDadults1)), 
                   type = "response")

PPTm_seq<-seq(min(rdata.scaled$PPT_m_norm,na.rm=T),max(rdata.scaled$PPT_m_norm,
                                                           na.rm=T),length=50)
PPTm_pred<-predict(rmodel.best, newdata=data.frame(BALIVE=median(rdata.scaled$BALIVE,na.rm=T),
                      PPT_c_norm=median(rdata.scaled$PPT_c_norm,na.rm=T),
                      PPT_wd_norm=median(rdata.scaled$PPT_wd_norm,na.rm=T),
                      PPT_m_norm=PPTm_seq,
                      T_c_norm=median(rdata.scaled$T_c_norm,na.rm=T),
                      T_wd_norm=median(rdata.scaled$T_wd_norm,na.rm=T),
                      T_m_norm=median(rdata.scaled$T_m_norm,na.rm=T),
                      PPTex_c_anom=median(rdata.scaled$PPTex_c_anom,na.rm=T),
                      PPTex_wd_anom=median(rdata.scaled$PPTex_wd_anom,na.rm=T),
                      PPTex_m_anom=median(rdata.scaled$PPTex_m_anom,na.rm=T),
                      Tex_c_anom=median(rdata.scaled$Tex_c_anom,na.rm=T),
                      Tex_wd_anom=median(rdata.scaled$Tex_wd_anom,na.rm=T),
                      Tex_m_anom=median(rdata.scaled$Tex_m_anom,na.rm=T),
                      CENSUS_INTERVAL=median(rdata.scaled$CENSUS_INTERVAL,na.rm=T),
                      PIEDadults1=median(rdata.scaled$PIEDadults1)), 
                   type = "response")

Tc_seq<-seq(min(rdata.scaled$T_c_norm,na.rm=T),max(rdata.scaled$T_c_norm,na.rm=T),length=50)
Tc_pred<-predict(rmodel.best, newdata=data.frame(BALIVE=median(rdata.scaled$BALIVE,na.rm=T),
                      PPT_c_norm=median(rdata.scaled$PPT_c_norm,na.rm=T),
                      PPT_wd_norm=median(rdata.scaled$PPT_wd_norm,na.rm=T),
                      PPT_m_norm=median(rdata.scaled$PPT_m_norm,na.rm=T),
                      T_c_norm=Tc_seq,
                      T_wd_norm=median(rdata.scaled$T_wd_norm,na.rm=T),
                      T_m_norm=median(rdata.scaled$T_m_norm,na.rm=T),
                      PPTex_c_anom=median(rdata.scaled$PPTex_c_anom,na.rm=T),
                      PPTex_wd_anom=median(rdata.scaled$PPTex_wd_anom,na.rm=T),
                      PPTex_m_anom=median(rdata.scaled$PPTex_m_anom,na.rm=T),
                      Tex_c_anom=median(rdata.scaled$Tex_c_anom,na.rm=T),
                      Tex_wd_anom=median(rdata.scaled$Tex_wd_anom,na.rm=T),
                      Tex_m_anom=median(rdata.scaled$Tex_m_anom,na.rm=T),
                      CENSUS_INTERVAL=median(rdata.scaled$CENSUS_INTERVAL,na.rm=T),
                      PIEDadults1=median(rdata.scaled$PIEDadults1)), 
                   type = "response")

Twd_seq<-seq(min(rdata.scaled$T_wd_norm,na.rm=T),max(rdata.scaled$T_wd_norm,
                                                         na.rm=T),length=50)
Twd_pred<-predict(rmodel.best, newdata=data.frame(BALIVE=median(rdata.scaled$BALIVE,na.rm=T),
                      PPT_c_norm=median(rdata.scaled$PPT_c_norm,na.rm=T),
                      PPT_wd_norm=median(rdata.scaled$PPT_wd_norm,na.rm=T),
                      PPT_m_norm=median(rdata.scaled$PPT_m_norm,na.rm=T),
                      T_c_norm=median(rdata.scaled$T_c_norm,na.rm=T),
                      T_wd_norm=Twd_seq,
                      T_m_norm=median(rdata.scaled$T_m_norm,na.rm=T),
                      PPTex_c_anom=median(rdata.scaled$PPTex_c_anom,na.rm=T),
                      PPTex_wd_anom=median(rdata.scaled$PPTex_wd_anom,na.rm=T),
                      PPTex_m_anom=median(rdata.scaled$PPTex_m_anom,na.rm=T),
                      Tex_c_anom=median(rdata.scaled$Tex_c_anom,na.rm=T),
                      Tex_wd_anom=median(rdata.scaled$Tex_wd_anom,na.rm=T),
                      Tex_m_anom=median(rdata.scaled$Tex_m_anom,na.rm=T),
                      CENSUS_INTERVAL=median(rdata.scaled$CENSUS_INTERVAL,na.rm=T),
                      PIEDadults1=median(rdata.scaled$PIEDadults1)), 
                   type = "response")

Tm_seq<-seq(min(rdata.scaled$T_m_norm,na.rm=T),max(rdata.scaled$T_m_norm,na.rm=T),length=50)
Tm_pred<-predict(rmodel.best, newdata=data.frame(BALIVE=median(rdata.scaled$BALIVE,na.rm=T),
                      PPT_c_norm=median(rdata.scaled$PPT_c_norm,na.rm=T),
                      PPT_wd_norm=median(rdata.scaled$PPT_wd_norm,na.rm=T),
                      PPT_m_norm=median(rdata.scaled$PPT_m_norm,na.rm=T),
                      T_c_norm=median(rdata.scaled$T_c_norm,na.rm=T),
                      T_wd_norm=median(rdata.scaled$T_wd_norm,na.rm=T),
                      T_m_norm=Tm_seq,
                      PPTex_c_anom=median(rdata.scaled$PPTex_c_anom,na.rm=T),
                      PPTex_wd_anom=median(rdata.scaled$PPTex_wd_anom,na.rm=T),
                      PPTex_m_anom=median(rdata.scaled$PPTex_m_anom,na.rm=T),
                      Tex_c_anom=median(rdata.scaled$Tex_c_anom,na.rm=T),
                      Tex_wd_anom=median(rdata.scaled$Tex_wd_anom,na.rm=T),
                      Tex_m_anom=median(rdata.scaled$Tex_m_anom,na.rm=T),
                      CENSUS_INTERVAL=median(rdata.scaled$CENSUS_INTERVAL,na.rm=T),
                      PIEDadults1=median(rdata.scaled$PIEDadults1)), 
                   type = "response")

PPTcex_seq<-seq(min(rdata.scaled$PPTex_c_anom,na.rm=T),max(rdata.scaled$PPTex_c_anom,
                                                           na.rm=T),length=50)
PPTcex_pred<-predict(rmodel.best, newdata=data.frame(BALIVE=median(rdata.scaled$BALIVE,na.rm=T),
                      PPT_c_norm=median(rdata.scaled$PPT_c_norm,na.rm=T),
                      PPT_wd_norm=median(rdata.scaled$PPT_wd_norm,na.rm=T),
                      PPT_m_norm=median(rdata.scaled$PPT_m_norm,na.rm=T),
                      T_c_norm=median(rdata.scaled$T_c_norm,na.rm=T),
                      T_wd_norm=median(rdata.scaled$T_wd_norm,na.rm=T),
                      T_m_norm=median(rdata.scaled$T_m_norm,na.rm=T),
                      PPTex_c_anom=PPTcex_seq,
                      PPTex_wd_anom=median(rdata.scaled$PPTex_wd_anom,na.rm=T),
                      PPTex_m_anom=median(rdata.scaled$PPTex_m_anom,na.rm=T),
                      Tex_c_anom=median(rdata.scaled$Tex_c_anom,na.rm=T),
                      Tex_wd_anom=median(rdata.scaled$Tex_wd_anom,na.rm=T),
                      Tex_m_anom=median(rdata.scaled$Tex_m_anom,na.rm=T),
                      CENSUS_INTERVAL=median(rdata.scaled$CENSUS_INTERVAL,na.rm=T),
                      PIEDadults1=median(rdata.scaled$PIEDadults1)), 
                   type = "response")

PPTwdex_seq<-seq(min(rdata.scaled$PPTex_wd_anom,na.rm=T),max(rdata.scaled$PPTex_wd_anom
                                                             ,na.rm=T),length=50)
PPTwdex_pred<-predict(rmodel.best, newdata=data.frame(BALIVE=median(rdata.scaled$BALIVE,na.rm=T),
                      PPT_c_norm=median(rdata.scaled$PPT_c_norm,na.rm=T),
                      PPT_wd_norm=median(rdata.scaled$PPT_wd_norm,na.rm=T),
                      PPT_m_norm=median(rdata.scaled$PPT_m_norm,na.rm=T),
                      T_c_norm=median(rdata.scaled$T_c_norm,na.rm=T),
                      T_wd_norm=median(rdata.scaled$T_wd_norm,na.rm=T),
                      T_m_norm=median(rdata.scaled$T_m_norm,na.rm=T),
                      PPTex_c_anom=median(rdata.scaled$PPTex_c_anom,na.rm=T),
                      PPTex_wd_anom=PPTwdex_seq,
                      PPTex_m_anom=median(rdata.scaled$PPTex_m_anom,na.rm=T),
                      Tex_c_anom=median(rdata.scaled$Tex_c_anom,na.rm=T),
                      Tex_wd_anom=median(rdata.scaled$Tex_wd_anom,na.rm=T),
                      Tex_m_anom=median(rdata.scaled$Tex_m_anom,na.rm=T),
                      CENSUS_INTERVAL=median(rdata.scaled$CENSUS_INTERVAL,na.rm=T),
                      PIEDadults1=median(rdata.scaled$PIEDadults1)), 
                   type = "response")

PPTmex_seq<-seq(min(rdata.scaled$PPTex_m_anom,na.rm=T),max(rdata.scaled$PPTex_m_anom,
                                                           na.rm=T),length=50)
PPTmex_pred<-predict(rmodel.best, newdata=data.frame(BALIVE=median(rdata.scaled$BALIVE,na.rm=T),
                      PPT_c_norm=median(rdata.scaled$PPT_c_norm,na.rm=T),
                      PPT_wd_norm=median(rdata.scaled$PPT_wd_norm,na.rm=T),
                      PPT_m_norm=median(rdata.scaled$PPT_m_norm,na.rm=T),
                      T_c_norm=median(rdata.scaled$T_c_norm,na.rm=T),
                      T_wd_norm=median(rdata.scaled$T_wd_norm,na.rm=T),
                      T_m_norm=median(rdata.scaled$T_m_norm,na.rm=T),
                      PPTex_c_anom=median(rdata.scaled$PPTex_c_anom,na.rm=T),
                      PPTex_wd_anom=median(rdata.scaled$PPTex_wd_anom,na.rm=T),
                      PPTex_m_anom=PPTmex_seq,
                      Tex_c_anom=median(rdata.scaled$Tex_c_anom,na.rm=T),
                      Tex_wd_anom=median(rdata.scaled$Tex_wd_anom,na.rm=T),
                      Tex_m_anom=median(rdata.scaled$Tex_m_anom,na.rm=T),
                      CENSUS_INTERVAL=median(rdata.scaled$CENSUS_INTERVAL,na.rm=T),
                      PIEDadults1=median(rdata.scaled$PIEDadults1)), 
                   type = "response")

Tcex_seq<-seq(min(rdata.scaled$Tex_c_anom,na.rm=T),max(rdata.scaled$Tex_c_anom,na.rm=T),length=50)
Tcex_pred<-predict(rmodel.best, newdata=data.frame(BALIVE=median(rdata.scaled$BALIVE,na.rm=T),
                      PPT_c_norm=median(rdata.scaled$PPT_c_norm,na.rm=T),
                      PPT_wd_norm=median(rdata.scaled$PPT_wd_norm,na.rm=T),
                      PPT_m_norm=median(rdata.scaled$PPT_m_norm,na.rm=T),
                      T_c_norm=median(rdata.scaled$T_c_norm,na.rm=T),
                      T_wd_norm=median(rdata.scaled$T_wd_norm,na.rm=T),
                      T_m_norm=median(rdata.scaled$T_m_norm,na.rm=T),
                      PPTex_c_anom=median(rdata.scaled$PPTex_c_anom,na.rm=T),
                      PPTex_wd_anom=median(rdata.scaled$PPTex_wd_anom,na.rm=T),
                      PPTex_m_anom=median(rdata.scaled$PPTex_m_anom,na.rm=T),
                      Tex_c_anom=Tcex_seq,
                      Tex_wd_anom=median(rdata.scaled$Tex_wd_anom,na.rm=T),
                      Tex_m_anom=median(rdata.scaled$Tex_m_anom,na.rm=T),
                      CENSUS_INTERVAL=median(rdata.scaled$CENSUS_INTERVAL,na.rm=T),
                      PIEDadults1=median(rdata.scaled$PIEDadults1)), 
                   type = "response")

Twdex_seq<-seq(min(rdata.scaled$Tex_wd_anom,na.rm=T),max(rdata.scaled$Tex_wd_anom,
                                                         na.rm=T),length=50)
Twdex_pred<-predict(rmodel.best, newdata=data.frame(BALIVE=median(rdata.scaled$BALIVE,na.rm=T),
                      PPT_c_norm=median(rdata.scaled$PPT_c_norm,na.rm=T),
                      PPT_wd_norm=median(rdata.scaled$PPT_wd_norm,na.rm=T),
                      PPT_m_norm=median(rdata.scaled$PPT_m_norm,na.rm=T),
                      T_c_norm=median(rdata.scaled$T_c_norm,na.rm=T),
                      T_wd_norm=median(rdata.scaled$T_wd_norm,na.rm=T),
                      T_m_norm=median(rdata.scaled$T_m_norm,na.rm=T),
                      PPTex_c_anom=median(rdata.scaled$PPTex_c_anom,na.rm=T),
                      PPTex_wd_anom=median(rdata.scaled$PPTex_wd_anom,na.rm=T),
                      PPTex_m_anom=median(rdata.scaled$PPTex_m_anom,na.rm=T),
                      Tex_c_anom=median(rdata.scaled$Tex_c_anom,na.rm=T),
                      Tex_wd_anom=Twdex_seq,
                      Tex_m_anom=median(rdata.scaled$Tex_m_anom,na.rm=T),
                      CENSUS_INTERVAL=median(rdata.scaled$CENSUS_INTERVAL,na.rm=T),
                      PIEDadults1=median(rdata.scaled$PIEDadults1)), 
                   type = "response")

Tmex_seq<-seq(min(rdata.scaled$Tex_m_anom,na.rm=T),max(rdata.scaled$Tex_m_anom,na.rm=T),length=50)
Tmex_pred<-predict(rmodel.best, newdata=data.frame(BALIVE=median(rdata.scaled$BALIVE,na.rm=T),
                      PPT_c_norm=median(rdata.scaled$PPT_c_norm,na.rm=T),
                      PPT_wd_norm=median(rdata.scaled$PPT_wd_norm,na.rm=T),
                      PPT_m_norm=median(rdata.scaled$PPT_m_norm,na.rm=T),
                      T_c_norm=median(rdata.scaled$T_c_norm,na.rm=T),
                      T_wd_norm=median(rdata.scaled$T_wd_norm,na.rm=T),
                      T_m_norm=median(rdata.scaled$T_m_norm,na.rm=T),
                      PPTex_c_anom=median(rdata.scaled$PPTex_c_anom,na.rm=T),
                      PPTex_wd_anom=median(rdata.scaled$PPTex_wd_anom,na.rm=T),
                      PPTex_m_anom=median(rdata.scaled$PPTex_m_anom,na.rm=T),
                      Tex_c_anom=median(rdata.scaled$Tex_c_anom,na.rm=T),
                      Tex_wd_anom=median(rdata.scaled$Tex_wd_anom,na.rm=T),
                      Tex_m_anom=Tmex_seq,
                      CENSUS_INTERVAL=median(rdata.scaled$CENSUS_INTERVAL,na.rm=T),
                      PIEDadults1=median(rdata.scaled$PIEDadults1)), 
                   type = "response")

r_pred<-as.data.frame(cbind(ba_seq,ba_pred,PPTc_seq,PPTc_pred,PPTwd_seq,PPTwd_pred,PPTm_seq,
                            PPTm_pred,Tc_seq,Tc_pred,Twd_seq,Twd_pred,Tm_seq,Tm_pred,
                            PPTcex_seq,PPTcex_pred,PPTwdex_seq,PPTwdex_pred,PPTmex_seq,
                            PPTmex_pred,Tcex_seq,Tcex_pred,Twdex_seq,Twdex_pred,Tmex_seq,Tmex_pred))

r_ba_plot<-ggplot(data=rdata.scaled,aes(x=BALIVE,y=recruits1))+
  geom_point(alpha=0.7)+
  geom_line(data=r_pred,aes(x=ba_seq,y=ba_pred),col="red")

r_PPTc_plot<-ggplot(data=rdata.scaled,aes(x=PPT_c_norm,y=recruits1))+
  geom_point(alpha=0.7)+
  geom_line(data=r_pred,aes(x=PPTc_seq,y=PPTc_pred),col="red")

r_PPTwd_plot<-ggplot(data=rdata.scaled,aes(x=PPT_wd_norm,y=recruits1))+
  geom_point(alpha=0.7)+
  geom_line(data=r_pred,aes(x=PPTwd_seq,y=PPTwd_pred),col="red")

r_PPTm_plot<-ggplot(data=rdata.scaled,aes(x=PPT_m_norm,y=recruits1))+
  geom_point(alpha=0.7)+
  geom_line(data=r_pred,aes(x=PPTm_seq,y=PPTm_pred),col="red")

r_Tc_plot<-ggplot(data=rdata.scaled,aes(x=T_c_norm,y=recruits1))+
  geom_point(alpha=0.7)+
  geom_line(data=r_pred,aes(x=Tc_seq,y=Tc_pred),col="red")

r_Twd_plot<-ggplot(data=rdata.scaled,aes(x=T_wd_norm,y=recruits1))+
  geom_point(alpha=0.7)+
  geom_line(data=r_pred,aes(x=Twd_seq,y=Twd_pred),col="red")

r_Tm_plot<-ggplot(data=rdata.scaled,aes(x=T_m_norm,y=recruits1))+
  geom_point(alpha=0.7)+
  geom_line(data=r_pred,aes(x=Tm_seq,y=Tm_pred),col="red")

r_PPTcex_plot<-ggplot(data=rdata.scaled,aes(x=PPTex_c_anom,y=recruits1))+
  geom_point(alpha=0.7)+
  geom_line(data=r_pred,aes(x=PPTcex_seq,y=PPTcex_pred),col="red")

r_PPTwdex_plot<-ggplot(data=rdata.scaled,aes(x=PPTex_wd_anom,y=recruits1))+
  geom_point(alpha=0.7)+
  geom_line(data=r_pred,aes(x=PPTwdex_seq,y=PPTwdex_pred),col="red")

r_PPTmex_plot<-ggplot(data=rdata.scaled,aes(x=PPTex_m_anom,y=recruits1))+
  geom_point(alpha=0.7)+
  geom_line(data=r_pred,aes(x=PPTmex_seq,y=PPTmex_pred),col="red")

r_Tcex_plot<-ggplot(data=rdata.scaled,aes(x=Tex_c_anom,y=recruits1))+
  geom_point(alpha=0.7)+
  geom_line(data=r_pred,aes(x=Tcex_seq,y=Tcex_pred),col="red")

r_Twdex_plot<-ggplot(data=rdata.scaled,aes(x=Tex_wd_anom,y=recruits1))+
  geom_point(alpha=0.7)+
  geom_line(data=r_pred,aes(x=Twdex_seq,y=Twdex_pred),col="red")

r_Tmex_plot<-ggplot(data=rdata.scaled,aes(x=Tex_m_anom,y=recruits1))+
  geom_point(alpha=0.7)+
  geom_line(data=r_pred,aes(x=Tmex_seq,y=Tmex_pred),col="red")
@

<<echo=FALSE>>=
multiplot <- function(..., plotlist=NULL, file, cols=1, layout=NULL) {
  library(grid)
  
  # Make a list from the ... arguments and plotlist
  plots <- c(list(...), plotlist)
  
  numPlots = length(plots)
  
  # If layout is NULL, then use 'cols' to determine layout
  if (is.null(layout)) {
    # Make the panel
    # ncol: Number of columns of plots
    # nrow: Number of rows needed, calculated from # of cols
    layout <- matrix(seq(1, cols * ceiling(numPlots/cols)),
                     ncol = cols, nrow = ceiling(numPlots/cols))
  }
  
  if (numPlots==1) {
    print(plots[[1]])
    
  } else {
    # Set up the page
    grid.newpage()
    pushViewport(viewport(layout = grid.layout(nrow(layout), ncol(layout))))
    
    # Make each plot, in the correct location
    for (i in 1:numPlots) {
      # Get the i,j matrix positions of the regions that contain this subplot
      matchidx <- as.data.frame(which(layout == i, arr.ind = TRUE))
      
      print(plots[[i]], vp = viewport(layout.pos.row = matchidx$row,
                                      layout.pos.col = matchidx$col))
    }
  }
}
@

\begin{figure}[H]
<<fig=TRUE,echo=FALSE>>=
multiplot(r_ba_plot,r_PPTc_plot,r_PPTwd_plot,r_PPTm_plot,r_Tc_plot,r_Twd_plot,r_Tm_plot,
          r_PPTcex_plot,r_PPTwdex_plot,r_PPTmex_plot,r_Tcex_plot,r_Twdex_plot,r_Tmex_plot,cols=2)
@
\caption{Effects plots for ``best" model, plotted over raw data.}
\end{figure}

\end{document}